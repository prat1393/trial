<?xml version="1.0" ?>

<VSModel name="trial" version="5">

<meta>
   <create version="8.4.0" buildNumber="8.4.0.227" author="admin" date="11/28/2017" host="HVDIVD18MIS1939" />
   <lastEdited version="8.4.0" buildNumber="8.4.0.227" author="admin" date="11/30/2017" host="HVDIVD18MIS1939" />
</meta>

<id>BB2300B5D46811E7A80BD67720524153</id>
<Documentation>Put documentation of the VS Model here.</Documentation>
<IsInProject>true</IsInProject>
<sig>ZWQ9NSZ0Y3Y9NSZsaXNhdj04LjQuMCAoOC40LjAuMjI3KSZub2Rlcz0tMTU5NjkyMjc4</sig>
<subprocess>false</subprocess>

<initState>
</initState>

<resultState>
</resultState>

<deletedProps>
</deletedProps>

    <Node name="read request" log=""
          type="com.itko.lisa.test.UserScriptNode" 
          version="1" 
          uid="B88345EBD5BF11E79D613E7C20524153" 
          think="500-1S" 
          useFilters="true" 
          quiet="false" 
          next="IUCLP" > 


      <!-- Data Sets -->
<readrec>Read Rows from Excel File</readrec>

      <!-- Assertions -->
<CheckResult assertTrue="true" name="Any Exception Then Fail" type="com.itko.lisa.dynexec.CheckInvocationEx">
<log>Assertion name: Any Exception Then Fail checks for: true is of type: Assert on Invocation Exception.</log>
<then>fail</then>
<valueToAssertKey></valueToAssertKey>
        <param>.*</param>
</CheckResult>

<onerror>abort</onerror>
<language>Groovy</language>
<copyProps>TestExecPropsAndSystemProps</copyProps>
<script>import java.io.BufferedReader;&#13;&#10;import java.io.FileReader;&#13;&#10;String a= testExec.getStateValue(&quot;Datatype&quot;).toString();&#13;&#10;String d= testExec.getStateValue(&quot;Read Rows from Excel File_RowNum&quot;).toString();&#13;&#10;testExec.setStateValue(&quot;count&quot;,d);&#13;&#10;String b=&quot;&quot;;&#13;&#10;if(a.equalsIgnoreCase(&quot;wireline&quot;))&#13;&#10;{&#13;&#10;FileReader file = new FileReader(&quot;H://wireline.txt&quot;);&#13;&#10;BufferedReader br = new BufferedReader(file);&#13;&#10;String l=br.readLine();&#13;&#10;while(l!=null)&#13;&#10;{&#13;&#10;b=b+l;&#13;&#10;l=br.readLine()&#13;&#10;}&#13;&#10;&#13;&#10;file.close();&#13;&#10;br.close();&#13;&#10;testExec.setStateValue(&quot;req&quot;,b);&#13;&#10;}&#13;&#10;if(a.equalsIgnoreCase(&quot;uverse&quot;))&#13;&#10;{&#13;&#10;FileReader file = new FileReader(&quot;H://uverse.txt&quot;);&#13;&#10;BufferedReader br = new BufferedReader(file);&#13;&#10;String l=br.readLine();&#13;&#10;while(l!=null)&#13;&#10;{&#13;&#10;b=b+l;&#13;&#10;l=br.readLine()&#13;&#10;}&#13;&#10;&#13;&#10;file.close();&#13;&#10;br.close();&#13;&#10;testExec.setStateValue(&quot;req&quot;,b);&#13;&#10;}&#13;&#10;if(a.equalsIgnoreCase(&quot;wireless&quot;))&#13;&#10;{&#13;&#10;FileReader file = new FileReader(&quot;H://wireless.txt&quot;);&#13;&#10;BufferedReader br = new BufferedReader(file);&#13;&#10;String l=br.readLine();&#13;&#10;while(l!=null)&#13;&#10;{&#13;&#10;b=b+l;&#13;&#10;l=br.readLine()&#13;&#10;}&#13;&#10;&#13;&#10;file.close();&#13;&#10;br.close();&#13;&#10;testExec.setStateValue(&quot;req&quot;,b);&#13;&#10;}&#13;&#10;&#13;&#10;</script>
    </Node>


    <Node name="IUCLP" log=""
          type="com.itko.lisa.ws.RawSOAPNode" 
          version="1" 
          uid="5CD29F7FD46211E7A80BD67720524153" 
          think="500-1S" 
          useFilters="true" 
          quiet="false" 
          next="write slid to file" > 


      <!-- Filters -->
      <Filter type="com.itko.lisa.test.FilterXMLGetChildText">
        <valueToFilterKey>lisa.IUCLP.rsp</valueToFilterKey>
      <tag>parentMemberIdentifier</tag>
      <tagn>1</tagn>
      <prop>slid</prop>
      </Filter>


      <!-- Assertions -->
<CheckResult assertTrue="true" name="Scripted Assertion" type="com.itko.lisa.test.AssertByScript">
<log>Assertion name: Scripted Assertion checks for: true is of type: Assert by Script Execution.</log>
<then>write slid to file</then>
<valueToAssertKey></valueToAssertKey>
        <script>// This script should return a boolean result indicating the assertion is true or false&#13;&#10;String d=testExec.getStateValue(&quot;slid&quot;).toString();&#13;&#10;String e=&quot;true&quot;;&#13;&#10;if(d.equals(null) || d.equals(&quot;&quot;))&#13;&#10;{&#13;&#10;e=&quot;false&quot;;&#13;&#10;}&#13;&#10;retval=e;</script>
        <language>Groovy</language>
        <copyprops>TestExecPropsAndSystemProps</copyprops>
</CheckResult>

<url>{{ENDPOINT6}}</url>
<action></action>
<soapRequest itko_enc="base64">e3tyZXF9fQ==</soapRequest>
<contentType>text/xml; charset=UTF-8</contentType>
<onError>abort</onError>
<discardResponse>false</discardResponse>
<customHTTPHeaderInfo>
    <Parameter>
    <key>FieldName</key>
    <value>HeaderValue</value>
    </Parameter>
</customHTTPHeaderInfo>
    </Node>


    <Node name="write slid to file" log=""
          type="com.itko.lisa.test.UserScriptNode" 
          version="1" 
          uid="9D7096C4D50A11E7879E3E7C20524153" 
          think="500-1S" 
          useFilters="true" 
          quiet="false" 
          next="end" > 


      <!-- Assertions -->
<CheckResult assertTrue="true" name="Any Exception Then Fail" type="com.itko.lisa.dynexec.CheckInvocationEx">
<log>Assertion name: Any Exception Then Fail checks for: true is of type: Assert on Invocation Exception.</log>
<then>fail</then>
<valueToAssertKey></valueToAssertKey>
        <param>.*</param>
</CheckResult>

<onerror>abort</onerror>
<language>Groovy</language>
<copyProps>TestExecProps</copyProps>
<script>import java.io.*;&#13;&#10;import org.apache.poi.xssf.usermodel.XSSFWorkbook;&#13;&#10;import org.apache.poi.xssf.usermodel.XSSFSheet;&#13;&#10;import org.apache.poi.ss.usermodel.*;&#13;&#10;import java.util.Iterator;&#13;&#10;String m=testExec.getStateValue(&quot;slid&quot;).toString();&#13;&#10;FileInputStream fs = new FileInputStream (&quot;H:\\projdata.xlsx&quot;)&#13;&#10; XSSFWorkbook wb =new XSSFWorkbook(fs); &#13;&#10; XSSFSheet ws = wb.getSheet(&quot;Sheet1&quot;);&#13;&#10;&#13;&#10;int i=testExec.getStateValue(&quot;Read Rows from Excel File_RowNum&quot;).toInteger();&#13;&#10;&#13;&#10;Row row = ws.getRow(i);&#13;&#10;Cell cell = row.createCell(2);  &#13;&#10;&#13;&#10;cell.setCellValue(m);&#13;&#10; FileOutputStream os = new FileOutputStream(&quot;H:\\projdata.xlsx&quot;);&#13;&#10;            wb.write(os);&#13;&#10;        &#13;&#10;fs.close();&#13;&#10;os.close();&#13;&#10;&#13;&#10;</script>
    </Node>


    <Node name="end" log=""
          type="com.itko.lisa.test.NormalEnd" 
          version="1" 
          uid="BB2327CBD46811E7A80BD67720524153" 
          think="0h" 
          useFilters="true" 
          quiet="true" 
          next="fail" > 

    </Node>


    <Node name="fail" log=""
          type="com.itko.lisa.test.Abend" 
          version="1" 
          uid="BB2327C9D46811E7A80BD67720524153" 
          think="0h" 
          useFilters="true" 
          quiet="true" 
          next="abort" > 

    </Node>


    <Node name="abort" log=""
          type="com.itko.lisa.test.AbortStep" 
          version="1" 
          uid="BB2327C7D46811E7A80BD67720524153" 
          think="0h" 
          useFilters="true" 
          quiet="true" 
          next="" > 

    </Node>


    <DataSet type="com.itko.lisa.test.ExcelDataFile" name="Read Rows from Excel File" atend="end" local="false" random="false" maxItemsToFetch="0" >
<sample>rO0ABXNyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAN3CAAAAAQAAAADdAAERGF0YXQACjIxMDIyMjAwMTh0AAhEYXRhdHlwZXQACFdpcmVsaW5ldAAgUmVhZCBSb3dzIGZyb20gRXhjZWwgRmlsZV9Sb3dOdW10AAExeA==</sample>
    <location>H:/projdata.xlsx</location>
    <sheetname>Sheet1</sheetname>
    </DataSet>

</VSModel>
