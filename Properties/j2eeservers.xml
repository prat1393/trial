<?xml version="1.0" ?>


<J2EEServers>

  <Server>
      <name>JBOSS 3.2/4.0</name>

      <jndiDriver>org.jnp.interfaces.NamingContextFactory</jndiDriver>
      <jndiUrlPrefix>jnp://</jndiUrlPrefix>
      <jndiDefPort>1099</jndiDefPort>
      <jndiNeedsClass>false</jndiNeedsClass>

      <clientJarMsg>The JBOSS client driver is not installed.  This screen will help you put it there.</clientJarMsg>
      <jarName>jbossall-client.jar</jarName>

      <noEJBClientMsg>We cannot find the EJB client jar.  This is the same jar you deploy to JBOSS.  Please provide it here so we can copy it into your Hot Deploy. In many cases you will find this jar inside of an EAR.</noEJBClientMsg>
      <doEJBCopy>true</doEJBCopy>
  </Server>


    <Server>
        <name>Weblogic</name>

        <jndiDriver>weblogic.jndi.WLInitialContextFactory</jndiDriver>
        <jndiUrlPrefix>t3://</jndiUrlPrefix>
        <jndiDefPort>7001</jndiDefPort>
        <jndiNeedsClass>false</jndiNeedsClass>

        <clientJarMsg>weblogic.jar is not installed.  Please supply the location of weblogic.jar which is required to initialize this type of step.</clientJarMsg>
        <jarName>weblogic.jar</jarName>

        <noEJBClientMsg>We cannot find the EJB client jar.  This is the jar that is generated by the Weblogic EJB deployment tool.  Please provide it here so we can copy it into your Hot Deploy.  In many cases you will find this jar inside of an EAR.</noEJBClientMsg>
        <doEJBCopy>true</doEJBCopy>
    </Server>


    <Server>
        <name>WebSphere 5.x, 6.0</name>

        <jndiDriver>com.ibm.websphere.naming.WsnInitialContextFactory</jndiDriver>
        <jndiUrlPrefix>iiop://</jndiUrlPrefix>
        <jndiDefPort>2809</jndiDefPort>
        <jndiNeedsClass>true</jndiNeedsClass>

        <clientJarMsg><![CDATA[<html>Please ensure you are running LISA in the IBM JVM or you have installed the appropriate pluggable client into your compliant non-IBM JVM.
                                    You can tell LISA to run the IBM JDK by setting an environment variable LISA_JAVA_HOME=(AN IBM JDK HOME).
                                    <P>Example:  c:\program Files\ibm\websphere\appserver\java
                                    <P>The needed Websphere client drivers are not completely installed.
                                    Please locate the following jars in your WAS/AD installations:
                                    <ul><li>bootstrap.jar<li>ecutils.jar<li>ffdc.jar<li>hlcbe101-13.jar<li>ibmorb.jar<li>idl.jar<li>iwsorb.jar<li>iwsorbutil.jar<li>lmproxy.jar<li>marshall.jar<li>naming.jar<li>namingclient.jar<li>ras.jar<li>txClient.jar<li>utils.jar<li>wsexception.jar</ul>
                                    <P>
                                    We will copy these jars as you find them into LISA's hotDeploy directory.  If you like, you may do this
                                    manually outside of this command and LISA will sense the jars have been added.
                                    <P>
                                    These jars are based on WAS 5.x and 6.0 versions.
                                    <P>
                                    Scroll to top for more information...
                                    ]]></clientJarMsg>
        <jarName></jarName> <!-- this means don't even bother trying to allow a single-file copy... -->

        <noEJBClientMsg>We cannot find the EJB client jar.  This is the jar that is generated by the Websphere EJB deployment tool.  Please provide it here so we can copy it into your Hot Deploy.  In many cases you will find this jar inside of an EAR.</noEJBClientMsg>
        <doEJBCopy>false</doEJBCopy>
    </Server>

    <Server>
            <name>WebSphere 6.1</name>

            <jndiDriver>com.ibm.websphere.naming.WsnInitialContextFactory</jndiDriver>
            <jndiUrlPrefix>iiop://</jndiUrlPrefix>
            <jndiDefPort>2809</jndiDefPort>
            <jndiNeedsClass>true</jndiNeedsClass>

            <clientJarMsg><![CDATA[<html>Please ensure you are running LISA in the IBM JVM or you have installed the appropriate pluggable client into your compliant non-IBM JVM.
                                        You can tell LISA to run the IBM JDK by setting an environment variable LISA_JAVA_HOME=(AN IBM JDK HOME).
                                        <P>Example:  c:\program Files\ibm\websphere\appserver\java
                                        <P>The needed Websphere client drivers are not completely installed.
                                        Please locate the following jar in your WAS installations under WAS61/runtimes:
                                        <ul><li>com.ibm.ws.admin.client_6.1.0.jar</ul>
                                        <P>
                                        We will copy this jar when you find it into LISA's hotDeploy directory.  If you like you, may do this
                                        manually outside of this command and LISA will sense the jars have been added.
                                        ]]></clientJarMsg>
            <jarName>com.ibm.ws.admin.client_6.1.0.jar</jarName>

            <noEJBClientMsg>We cannot find the EJB client jar.  This is the jar that is generated by the Websphere EJB deployment tool.  Please provide it here so we can copy it into your Hot Deploy.  In many cases you will find this jar inside of an EAR.</noEJBClientMsg>
            <doEJBCopy>true</doEJBCopy>
        </Server>

	 <Server>
            <name>WebSphere 7</name>
            <jndiDriver>com.ibm.websphere.naming.WsnInitialContextFactory</jndiDriver>
            <jndiUrlPrefix>iiop://</jndiUrlPrefix>
            <jndiDefPort>2809</jndiDefPort>
            <jndiNeedsClass>true</jndiNeedsClass>

            <clientJarMsg><![CDATA[<html>The needed Websphere client jars are not  installed.
                                        Please locate the following jars in your WAS installation under WAS_HOME/runtimes:
                                        <ul><li>com.ibm.ws.admin.client_7.0.0.jar</ul>
                                        <ul><li>com.ibm.ws.ejb.thinclient_7.0.0.jar</ul>
                                        <ul><li>com.ibm.ws.orb_7.0.0.jar</ul>
                                        <P>
                                        Copy these into LISA's hotDeploy directory.
                                        ]]></clientJarMsg>
        <jarName></jarName> <!-- this means don't even bother trying to allow a single-file copy... -->

            <noEJBClientMsg>We cannot find the EJB client jar.  This is the jar that is generated by the Websphere EJB deployment tool.  Please provide it here so we can copy it into your Hot Deploy.  In many cases you will find this jar inside of an EAR. You can also export the application from the WebSphere admin console and then extract the client jar and then use the WAS/bin/createEjbStubs tool to create the necessary client side classes. Copy the resulting jar into LISA_HOME/hotDeploy.</noEJBClientMsg>
            <doEJBCopy>true</doEJBCopy>
        </Server>

	 <Server>
            <name>WebSphere 8</name>
            <jndiDriver>com.ibm.websphere.naming.WsnInitialContextFactory</jndiDriver>
            <jndiUrlPrefix>iiop://</jndiUrlPrefix>
            <jndiDefPort>2809</jndiDefPort>
            <jndiNeedsClass>true</jndiNeedsClass>

            <clientJarMsg><![CDATA[<html>The needed Websphere client jars are not  installed.
                                        Please locate the following jars in your WAS installation under WAS_HOME/runtimes:
                                        <ul><li>com.ibm.ws.admin.client_8.0.0.jar</ul>
                                        <ul><li>com.ibm.ws.ejb.thinclient_8.0.0.jar</ul>
                                        <ul><li>com.ibm.ws.orb_8.0.0.jar</ul>
                                        <P>
                                        Copy these into LISA's hotDeploy directory.
                                        ]]></clientJarMsg>
        <jarName></jarName> <!-- this means don't even bother trying to allow a single-file copy... -->

            <noEJBClientMsg>We cannot find the EJB client jar.  This is the jar that is generated by the Websphere EJB deployment tool.  Please provide it here so we can copy it into your Hot Deploy.  In many cases you will find this jar inside of an EAR. You can also export the application from the WebSphere admin console and then extract the client jar and then use the WAS/bin/createEjbStubs tool to create the necessary client side classes. Copy the resulting jar into LISA_HOME/hotDeploy.</noEJBClientMsg>
            <doEJBCopy>true</doEJBCopy>
        </Server>

    <Server>
        <name>Borland Enterprise Server</name>

        <jndiDriver>com.inprise.j2ee.jndi.CtxFactory</jndiDriver>
        <jndiUrlPrefix>iiop://</jndiUrlPrefix>
        <jndiDefPort>1099</jndiDefPort>
        <jndiNeedsClass>true</jndiNeedsClass>

        <clientJarMsg>The Borland client driver is not installed.  This screen will help you put it there.  </clientJarMsg>
        <jarName>*.jar</jarName>

        <noEJBClientMsg>We cannot find the EJB client jar.  Please provide it here so we can copy it into your Hot Deploy.</noEJBClientMsg>
        <doEJBCopy>true</doEJBCopy>
    </Server>

    <Server>
        <name>SAP Netweaver</name>

        <jndiDriver>com.sun.jndi.cosnaming.CNCtxFactory</jndiDriver>
        <jndiUrlPrefix>iiop://</jndiUrlPrefix>
        <jndiDefPort>50007</jndiDefPort>
        <jndiNeedsClass>true</jndiNeedsClass>

        <clientJarMsg>The client driver is not installed.  SAP requires that you disable our J2EE jar in /lib and use the many jars from the SAP Development Studio instead.  Please see our SAP Support Tech Note on the iTKO Support web site.</clientJarMsg>
        <jarName>*.jar</jarName>

        <noEJBClientMsg>We cannot find the EJB client jar.  Please provide it here so we can copy it into your Hot Deploy.</noEJBClientMsg>
        <doEJBCopy>true</doEJBCopy>
    </Server>

    <Server>
        <name>iPlanet/Sun AS</name>

        <jndiDriver>com.sun.jndi.cosnaming.CNCtxFactory</jndiDriver>
        <jndiUrlPrefix>iiop://</jndiUrlPrefix>
        <jndiDefPort>1099</jndiDefPort>
        <jndiNeedsClass>true</jndiNeedsClass>

        <clientJarMsg>The client driver is not installed.  This screen will help you put it there.  </clientJarMsg>
        <jarName>*.jar</jarName>

        <noEJBClientMsg>We cannot find the EJB client jar.  Please provide it here so we can copy it into your Hot Deploy.</noEJBClientMsg>
        <doEJBCopy>true</doEJBCopy>
    </Server>

    <Server>
        <name>Other - JNP (Unlisted)</name>

        <jndiDriver>org.jnp.interfaces.NamingContextFactory</jndiDriver>
        <jndiUrlPrefix>jnp://</jndiUrlPrefix>
        <jndiDefPort>1099</jndiDefPort>
        <jndiNeedsClass>false</jndiNeedsClass>

        <clientJarMsg>The client driver is not installed.  This screen will help you put it there.  </clientJarMsg>
        <jarName>*.jar</jarName>

        <noEJBClientMsg>We cannot find the EJB client jar.  Please provide it here so we can copy it into your Hot Deploy.</noEJBClientMsg>
        <doEJBCopy>true</doEJBCopy>
    </Server>

    <Server>
        <name>Other - IIOP (Unlisted)</name>

        <jndiDriver>com.sun.jndi.cosnaming.CNCtxFactory</jndiDriver>
        <jndiUrlPrefix>iiop://</jndiUrlPrefix>
        <jndiDefPort>1099</jndiDefPort>
        <jndiNeedsClass>true</jndiNeedsClass>

        <clientJarMsg>The client driver is not installed.  This screen will help you put it there.  </clientJarMsg>
        <jarName>*.jar</jarName>

        <noEJBClientMsg>We cannot find the EJB client jar.  Please provide it here so we can copy it into your Hot Deploy.</noEJBClientMsg>
        <doEJBCopy>true</doEJBCopy>
    </Server>

</J2EEServers>

