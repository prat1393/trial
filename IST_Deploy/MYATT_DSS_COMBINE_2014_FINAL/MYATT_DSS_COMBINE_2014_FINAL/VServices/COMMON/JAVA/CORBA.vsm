<?xml version="1.0" ?>

<VSModel name="CORBA" version="5">

<meta>
   <create version="6.0.9" buildNumber="6.0.9.26" author="admin" date="08/26/2012" host="cacdtl01dk961k" />
   <lastEdited version="8.4.0" buildNumber="8.4.0.227" author="admin" date="01/05/2018" host="HVDIVD00MIS1018" />
</meta>

<id>30656235376231362D316662622D3436</id>
<IsInProject>true</IsInProject>
<sig>ZWQ9NSZ0Y3Y9NSZsaXNhdj04LjQuMCAoOC40LjAuMjI3KSZub2Rlcz0yODQwMzgwOTk=</sig>
<subprocess>false</subprocess>

<initState>
</initState>

<resultState>
</resultState>

<deletedProps>
</deletedProps>

      <Companion type="com.itko.lisa.vse.stateful.protocol.java.companion.JavaProtocolCompanion" >
      </Companion>

    <Node name="Java Listen" log=""
          type="com.itko.lisa.vse.stateful.protocol.java.listen.JavaListenStep" 
          version="1" 
          uid="30656235376231362D316662622D3436-Java+Listen" 
          think="0" 
          useFilters="true" 
          quiet="true" 
          next="Virtual Service Execution Router" > 


      <!-- Assertions -->
<CheckResult assertTrue="true" name="If being efficient" type="com.itko.lisa.vse.stateful.AssertOnExecutionMode">
<log>Current execution mode is Most Efficient, branching to VS Image Response Selection</log>
<then>VS Image Response Selection</then>
<valueToAssertKey></valueToAssertKey>
        <executionMode>EFFICIENT</executionMode>
</CheckResult>

<outputAsObject>true</outputAsObject>
<onExceptionStep>abort</onExceptionStep>
<TargetAgents>qcef04Agent</TargetAgents>
<TargetAgents>qcef02Agent</TargetAgents>
<TargetClasses>com.sbc.eia.idl.lim_types.ExtensionPropertySeqOpt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.PaymentProfileOpt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.lim_types.AddressMailingOpt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.lim_types.AlternativePostalLocationSeqOpt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.PaymentProfileMethodRequest2Opt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.CreditPolicyProfileOpt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.PaymentRequest3Opt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.PaymentOpt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.PaymentMethod2</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.PaymentMethod</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.Payment2SeqOpt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.PaymentProfileMethodRequest3Opt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.PaymentEligibilitySeqOpt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.ResourceSystemInformationOpt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.CreditPolicyProfileRequestOpt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.lim_types.AlternativePostalLocation2SeqOpt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.lim_types.AlternativeAddress</TargetClasses>
<TargetClasses>com.sbc.eia.idl.lim_types.ProviderLocationPropertiesSeqOpt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.lim_types.AlternativeAddressSeqOpt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.CreditPolicyRequirementItemOpt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.PaymentPlanMethod</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.CustomerPaymentViewOpt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.PaymentProfileRequest3Opt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.LastCreditCardPaymentMethodOpt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.CheckDataOpt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.AccountTypeOpt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.PaymentKeyOpt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.RefundItemRequest2Opt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.PaymentRequest2Opt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.PaymentPlanRequestOpt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.lim_types.AddressMailing2Opt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.RefundNoteItemOpt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.CreditCardDataOpt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.PaymentItem2Opt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.BankOpt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.PaymentProfileMethodRequestOpt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.lim_types.AlternativeServiceAddress</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.PaymentRequestOpt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.PaymentMethodRequest2Opt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.PaymentMethodRequest</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.PaymentItem2SeqOpt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.lim_types.LocationOpt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.PaymentPlanMethodRequest2Opt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.lim_types.ProviderLocationPropertySeqOpt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.PaymentAgentOpt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.PaymentPlanMethodRequest</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.PaymentPlanMethodRequest3Opt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.lim_types.AddressOpt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.CreditPolicyResponseOpt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.RefundItem2Opt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.lim_types.Address2</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.RefundItemOpt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.DishonoredCheckItemOpt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.PaymentProfileMethod</TargetClasses>
<TargetClasses>com.sbc.eia.idl.lim_types.SupplementalDataSeqOpt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.PaymentMethodRequestOpt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.LastCheckPaymentMethodOpt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.RefundItemRequestOpt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.lim_types.LocationPropertiesToGetSeqOpt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.PaymentItemKeyOpt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.CreditPolicyRequirementOpt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.lim_types.LocationSeqOpt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.PaymentSourceOpt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.PaymentEligibilityOpt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.PaymentPlanItemOpt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.PaymentPlanOpt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.PaymentMethod2Opt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.PaymentMethodRequest2</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.PaymentPlanItemRequestOpt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.PaymentMethodRequest3</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.Payment2Opt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.PaymentMethodOpt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.lim_types.Address2Opt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.PaymentItemRequest2Opt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.lim_types.MarketInformationOpt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.PaymentProfileRequest2Opt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.StatusOpt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.CustomerPaymentViewRequestOpt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.PaymentPlanMethodOpt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.PaymentMethodRequest3Opt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.PaymentItemRequestOpt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.MemoItemOpt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.PaymentProfileItemOpt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.PaymentProfileMethodRequest3</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.PaymentProfileRequestOpt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.PaymentProfileMethodRequest2</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.CreditCardData2Opt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.DishonorReasonOpt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.PaymentOptionOpt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.PaymentProfileMethodRequest</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.PaymentItemOpt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.lim_types.ProviderLocationPropertyOpt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.DishonoredCheckItemSeqOpt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.PaymentPlanRequest2Opt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.CreditPolicyResponseItemOpt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.PaymentPlanRequest3Opt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.PaymentPlanMethodRequest2</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.PaymentPlanMethodRequest3</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.CardVerificationIndidactorOpt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.lim_types.Address</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.PaymentProfileMethodOpt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.PaymentProfileSeqOpt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.lim_types.ServiceAreaSeqOpt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.lim_types.SubmittedAddressExceptionSeqOpt</TargetClasses>
<TargetClasses>com.sbc.eia.idl.pam_types.PaymentPlanMethodRequestOpt</TargetClasses>
    </Node>


    <Node name="Virtual Service Execution Router" log=""
          type="com.itko.lisa.vse.stateful.VSRouterStep" 
          version="1" 
          uid="30656235376231362D316662622D3436-Virtual+Service+Router" 
          think="0" 
          useFilters="true" 
          quiet="true" 
          next="VS Image Response Selection" > 

<onerror>abort</onerror>
<script>// This script must return either an enum entry from ExecutionMode or&#13;&#10;// a string that is the name of an enum entry.  The DYNAMIC entry may&#13;&#10;// not be returned.  It will be executed for DYNAMIC execution mode&#13;&#10;// only.&#13;&#10;import com.itko.lisa.vse.ExecutionMode;&#13;&#10;&#13;&#10;return ExecutionMode.EFFICIENT;&#13;&#10;</script>
<liveInvocationStep>Java Live Invocation</liveInvocationStep>
    </Node>


    <Node name="VS Image Response Selection" log=""
          type="com.itko.lisa.vse.stateful.ConversationalStep" 
          version="1" 
          uid="30656235376231362D316662622D3436-VS+Image+Response+Selection" 
          think="0" 
          useFilters="true" 
          quiet="true" 
          next="Java Respond" > 


      <!-- Assertions -->
<CheckResult assertTrue="true" name="If validating" type="com.itko.lisa.vse.stateful.AssertOnExecutionMode">
<log>Current execution mode is Image Validation, branching to Java Live Invocation</log>
<then>Java Live Invocation</then>
<valueToAssertKey></valueToAssertKey>
        <executionMode>VALIDATION</executionMode>
</CheckResult>

<CheckResult assertTrue="true" name="If tracking" type="com.itko.lisa.vse.stateful.AssertOnExecutionMode">
<log>Current execution mode is Transaction Tracking, branching to Virtual Service Tracking</log>
<then>Virtual Service Tracking</then>
<valueToAssertKey></valueToAssertKey>
        <executionMode>TRACK</executionMode>
</CheckResult>

<vsiSource>{{LISA_PROJ_ROOT}}/VServices/COMMON/JAVA/Images/CORBA.vsi</vsiSource>
<requestPropertyName>lisa.vse.request</requestPropertyName>
<outputAsObject>true</outputAsObject>
<onExceptionStep>abort</onExceptionStep>
    </Node>


    <Node name="Java Respond" log=""
          type="com.itko.lisa.vse.stateful.protocol.java.respond.JavaRespondStep" 
          version="1" 
          uid="30656235376231362D316662622D3436-Java+Respond" 
          think="0" 
          useFilters="true" 
          quiet="false" 
          next="Java Listen" > 

<responseList>lisa.vse.response</responseList>
<onExceptionStep>abort</onExceptionStep>
    </Node>


    <Node name="Java Live Invocation" log=""
          type="com.itko.lisa.vse.stateful.protocol.java.liveinvocation.JavaLiveInvocationStep" 
          version="1" 
          uid="30656235376231362D316662622D3436-Java+Live+Invocation" 
          think="0" 
          useFilters="true" 
          quiet="true" 
          next="Java Respond" > 


      <!-- Assertions -->
<CheckResult assertTrue="true" name="If validating" type="com.itko.lisa.vse.stateful.AssertOnExecutionMode">
<log>Current execution mode is Image Validation, branching to Virtual Service Tracking</log>
<then>Virtual Service Tracking</then>
<valueToAssertKey></valueToAssertKey>
        <executionMode>VALIDATION</executionMode>
</CheckResult>

<outputAsObject>true</outputAsObject>
<onExceptionStep>abort</onExceptionStep>
<requestPropertyName>lisa.vse.request</requestPropertyName>
    </Node>


    <Node name="Virtual Service Tracking" log=""
          type="com.itko.lisa.vse.stateful.VSTrackingStep" 
          version="1" 
          uid="30656235376231362D316662622D3436-Virtual+Service+Tracking" 
          think="0" 
          useFilters="true" 
          quiet="true" 
          next="Java Respond" > 

<imageResponseProperty>lisa.vse.image.response</imageResponseProperty>
<liveResponseProperty>lisa.vse.live.response</liveResponseProperty>
<onExceptionStep>abort</onExceptionStep>
    </Node>


    <Node name="end" log=""
          type="com.itko.lisa.test.NormalEnd" 
          version="1" 
          uid="30656235376231362D316662622D3436-end" 
          think="0h" 
          useFilters="true" 
          quiet="true" 
          next="fail" > 

    </Node>


    <Node name="fail" log=""
          type="com.itko.lisa.test.Abend" 
          version="1" 
          uid="30656235376231362D316662622D3436-fail" 
          think="0h" 
          useFilters="true" 
          quiet="true" 
          next="fail" > 

    </Node>


    <Node name="abort" log="The test was aborted"
          type="com.itko.lisa.test.AbortStep" 
          version="1" 
          uid="30656235376231362D316662622D3436-abort" 
          think="0h" 
          useFilters="true" 
          quiet="true" 
          next="fail" > 

    </Node>


</VSModel>
