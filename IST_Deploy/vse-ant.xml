<record name="logfile.txt" action="start" append="false" />
<project name="vse-ant-mgr" basedir="." default="help">
	<property environment="env" />
	<property file="${basedir}/vse-ant.properties" />
	<property name="vs.dir" value="${lisa.proj.root}/VServices" />
	<property name="mar.dir" value="${lisa.proj.root}/MARInfos" />
	<property name="config.dir" value="${lisa.proj.root}/Configs" />
	<property name="config.file" value="${config.dir}/${config}" />

	<path id="project.classpath">
		<pathelement path="${basedir}" />
		<fileset dir="C:\lisa 8.4\DevTest/lib" includes="**/*.jar" />
		<fileset dir="C:\lisa 8.4\DevTest/bin" includes="**/*.jar" />
		<fileset dir="C:\lisa 8.4\DevTest/hotDeploy" includes="**/*.jar" />
		<fileset dir="${basedir}" includes="*.jar" />
		<dirset dir="${basedir}" />


	</path>


	<property name="dir.lisa.bin" value="C:\lisa 8.4\DevTest/bin" />
	<property name="exe.lisa.vsemgr" value="${dir.lisa.bin}/VSEManager" />
	<property name="exe.lisa.makemar" value="${dir.lisa.bin}/MakeMar" />



	<!--
	Help
	-->
	<target name="help">
		<echo message="Command              : Usage                                             : Description" />
		<echo message="  [batch level]" />
		<echo message="status-all           : status-all                                        : Get the status of all virtual service related to the project." />
		<echo message="start-all            : start-all                                         : Start all virtual services related to this project." />
		<echo message="stop-all             : stop-all                                          : Stop all services related to this project." />
		<echo message="stop-all             : reset-all                                         : Reset Tx count for all services related to this project." />
		<echo message="deploy-all           : deploy-all                                        : Deploy all virtual services related to this project to VSE." />
		<echo message="smart-deploy-all     : deploy-all                                        : This is same as Deploy all but if the service already exists , deployment of that service will be skipped to VSE." />
		<echo message="remove-all           : remove-all                                        : Remove all virtual services related to this project from VSE" />
		<echo message="  [single item] : use -Dvsi=[serviceImage] for non-interactive" />
		<echo message="                   example: status  -Dvsi=DatabaseModel" />
		<echo message="status               : status                                            : Get the status of a single virtual service related to the project." />
		<echo message="start                : start                                             : Start a single virtual services from this project." />
		<echo message="stop                 : stop                                              : Stop a single service from this project." />
		<echo message="deploy               : deploy                                            : Deploy a single virtual service from this project to VSE. It must exist as a MAR." />
		<echo message="remove               : remove                                            : Remove a single virtual service from this project from VSE" />
		<echo message="  [model management]" />
		<echo message="  Optional parameters for all of the following commands" />
		<echo message="                          -Dvs.capacity=n                               :  Sets the capacity level to 'n', default is 1" />
		<echo message="                          -Dvs.thinkscale=n                             :  Sets the think scale percentage level to 'n', default is 100" />
		<echo message="                          -Dvs.restart=on|off                           :  Sets the auto-restart, default is on" />
		<echo message="build-mari           : build-mari                                        : Builds a MARI from a specified VSM" />
		<echo message="build-all-mari       : build-all-mari                                    : Builds a MARI from all VSM" />
		<echo message="build-mar            : build-mar                                         : Builds a MAR only if mari is present.  Will auto-increment MAR names as needed" />
		<echo message="redeploy             : redeploy                                          : Redeploys a MAR" />
		<echo message="update				: update											: Updates a SI VSE settings (each one is optional)" />



	</target>

	<!-- check for vsi name -->
	<target name="get-si-name">
		<condition property="vsi-set">
			<isset property="vsi" />
		</condition>
	</target>

	<!-- read vsi name from cl -->
	<target name="read-si-name" depends="get-si-name" unless="vsi=set">
		<input message="enter the service name: " addproperty="vsi" />
		<echo message="Read SI as: ${vsi}" />
	</target>



	<!-- set/clear username/pass if credentials file property present  -->
	<target name="set-credentials">
		<property name="lisa.username" value="--username=${acl.username}" />
		<property name="lisa.password" value="--password=${acl.password}" />
	</target>


	<!--
		Starts all services on the VSE.
	-->
	<target name="vse-start-all" depends="set-credentials">
		<java classpathref="project.classpath" fork="true" classname="com.itko.lisa.vse.batch.cmd.mgr.VSEManagerWrapper">
			<sysproperty key="LISA_HOME" value="C:\lisa 8.4\DevTest" />
			<arg value="vse-start-all" />
			<arg value="--registry" />
			<arg value="${lisa.registry}" />
			<arg value="--vse" />
			<arg value="${vse.server}" />
			<arg value="--vs-dir" />
			<arg value="${vs.dir}" />
			<arg value="${lisa.username}" />
			<arg value="${lisa.password}" />
			<jvmarg value="-Xms256m" />
			<jvmarg value="-Xmx1024m" />
		</java>
	</target>


	<target name="start-all">
		<antcall target="project-start-all" />
	</target>
	<target name="project-start-all" depends="set-credentials">
		
			<echo message="${lisa.username}" />
			<echo message="${lisa.password}" />
		<java classpathref="project.classpath" fork="true" classname="com.itko.lisa.vse.batch.cmd.mgr.VSEManagerWrapper">
			<sysproperty key="LISA_HOME" value="C:\lisa 8.4\DevTest" />
			<arg value="project-start-all" />
			<arg value="--registry" />
			<arg value="${lisa.registry}" />
			<arg value="--vse" />
			<arg value="${vse.server}" />
			<arg value="--vs-dir" />
			<arg value="${vs.dir}" />
			<arg value="${lisa.username}" />
			<arg value="${lisa.password}" />
			<jvmarg value="-Xms256m" />
			<jvmarg value="-Xmx1024m" />
		</java>
	</target>
	<!--
		class help.
	-->
	<target name="help2">
		<java classpathref="project.classpath" fork="true" classname="com.itko.lisa.vse.batch.cmd.mgr.VSEManagerWrapper">
			<sysproperty key="LISA_HOME" value="C:\lisa 8.4\DevTest" />

		</java>
	</target>

	<!-- does MAR exist in MARInfos? -->
	<target name="exist.mar" depends="read-si-name">
		<property name="name.model" value="${mar.dir}/${vsi}.mar" />
		<available file="${name.model}" property="mar.exists" />
	</target>

	<!-- does MARI exist in MARInfos? -->
	<target name="exist.mari" depends="read-si-name">
		<property name="name.model" value="${mar.dir}/${vsi}.mari" />
		<available file="${name.model}" property="mari.exists" />
	</target>

	<!-- target to build a MAR -->
	<target name="build-mar" depends="read-si-name, set-credentials">
		<property name="name.model" value="${vs.dir}/${vsi}.vsm" />
		<echo message="building MAR for : ${vsi} [${name.model}]" />
		<java classpathref="project.classpath" fork="true" classname="com.itko.lisa.vse.batch.cmd.mgr.VSEManagerWrapper">
			<sysproperty key="LISA_HOME" value="C:\lisa 8.4\DevTest" />
			<arg value="build-mar" />
			
			<arg value="--registry" />
			<arg value="${lisa.registry}" />
			
			<arg value="--proj-root-dir" />
			<arg value="${lisa.proj.root}" />
			
			<arg value="--vs-dir" />
			<arg value="${vs.dir}" />
			
			<arg value="--mar-dir" />
			<arg value="${mar.dir}" />
			
			<arg value="--service-name" />
			<arg value="${vsi}" />
			
			<arg value="--config" />
			<arg value="${config.file}" />
			
			<!-- optional values -->
			<arg value="--capacity" />
			<arg value="${vs.capacity}" />
			<arg value="--think-scale" />
			<arg value="${vs.thinkscale}" />
			<arg value="--auto-restart" />
			<arg value="${vs.restart}" />

			<!-- credentials -->
			<arg value="${lisa.username}" />
			<arg value="${lisa.password}" />
			<jvmarg value="-Xms256m" />
			<jvmarg value="-Xmx1024m" />
		</java>

	</target>

	<!-- target to build mar from all models  -->
	<target name="build-all-mar" depends="set-credentials">
		<property name="name.model" value="${vs.dir}/${vsi}.vsm" />
		<echo message="building MAR for all models in ${vs.dir}" />
		<java classpathref="project.classpath" fork="true" classname="com.itko.lisa.vse.batch.cmd.mgr.VSEManagerWrapper">
			<sysproperty key="LISA_HOME" value="C:\lisa 8.4\DevTest" />
			<arg value="build-all-mar" />
			<arg value="--registry" />
			<arg value="${lisa.registry}" />
			
			<arg value="--proj-root-dir" />
			<arg value="${lisa.proj.root}" />
			
			<arg value="--vs-dir" />
			<arg value="${vs.dir}" />
			
			<arg value="--mar-dir" />
			<arg value="${mar.dir}" />
			<arg value="--build-all" />
			<arg value="--config" />
			<arg value="${config.file}" />

			<!-- optional values -->
			<arg value="--capacity" />
			<arg value="${vs.capacity}" />
			<arg value="--think-scale" />
			<arg value="${vs.thinkscale}" />
			<arg value="--auto-restart" />
			<arg value="${vs.restart}" />

			<!-- credentials -->
			<arg value="${lisa.username}" />
			<arg value="${lisa.password}" />
			<jvmarg value="-Xms256m" />
			<jvmarg value="-Xmx1024m" />
		</java>
	</target>

	<!-- target for deploying using  VSEManager -->
	<target name="deploy-vse-manager" depends="read-si-name,set-credentials">
		<property name="name.model" value="${mar.dir}/${vsi}.mar" />
		<echo message="${cmd.vsemgr}: ${vsi} [${name.model}]" />
		<exec executable="${exe.lisa.vsemgr}">
			<env key="LISA_HOME" value="C:\lisa 8.4\DevTest" />
			<arg value="--registry" />
			<arg value="${lisa.registry}" />
			<arg value="--vse" />
			<arg value="${vse.server}" />
			<arg value="--${cmd.vsemgr}" />
			<arg value="${name.model}" />
			<arg value="${lisa.username}" />
			<arg value="${lisa.password}" />
			<jvmarg value="-Xms256m" />
			<jvmarg value="-Xmx1024m" />
		</exec>
	</target>

	<!-- target for updating using  VSEManager -->
	<target name="update-vse-manager" depends="read-si-name,set-credentials">
		<property name="name.model" value="${mar.dir}/${vsi}.mar" />
		<echo message="${cmd.vsemgr}: ${vsi} [${name.model}]" />
		<exec executable="${exe.lisa.vsemgr}">
			<env key="LISA_HOME" value="C:\lisa 8.4\DevTest" />
			<arg value="${lisa.username}" />
			<arg value="${lisa.password}" />
			<arg value="--registry" />
			<arg value="${lisa.registry}" />
			<arg value="--vse" />
			<arg value="${vse.server}" />
			<arg value="--${cmd.vsemgr}" />
			<arg value="${vsi}" />
			<arg value="--capacity" />
			<arg value="${vs.capacity}" />
			<arg value="--thinkscale" />
			<arg value="${vs.thinkscale}" />
			<arg value="--auto-restart" />
			<arg value="${vs.restart}" />
			<jvmarg value="-Xms256m" />
			<jvmarg value="-Xmx1024m" />

		</exec>
	</target>

	<!-- generic target for running VSEManager -->
	<target name="exec-vse-manager" depends="set-credentials">
		<echo message="${cmd.vsemgr}: ${vsi}" />
		<exec executable="${exe.lisa.vsemgr}">
			<env key="LISA_HOME" value="C:\lisa 8.4\DevTest" />
			<arg value="${lisa.username}" />
			<arg value="${lisa.password}" />
			<arg value="--registry" />
			<arg value="${lisa.registry}" />
			<arg value="--vse" />
			<arg value="${vse.server}" />
			<arg value="--${cmd.vsemgr}" />
			<arg value="${vsi}" />

		</exec>
	</target>
	<!-- Start a single service on  the VSE 	-->
	<target name="start" depends="read-si-name">
		<echo message="starting ${vsi} on  ${vse.server}" />
		<antcall target="exec-vse-manager">
			<param name="cmd.vsemgr" value="start" />
		</antcall>
	</target>

	<!-- Stop a single service on  the VSE	-->
	<target name="stop" depends="read-si-name">
		<echo message="stopping ${vsi} on  ${vse.server} " />
		<antcall target="exec-vse-manager">
			<param name="cmd.vsemgr" value="stop" />
		</antcall>
	</target>

	<!-- remove a single service from the VSE -->
	<target name="remove" depends="read-si-name, set-credentials">
		<echo message="removing ${vsi} from ${vse.server} " />
		<java classpathref="project.classpath" fork="true" classname="com.itko.lisa.vse.batch.cmd.mgr.VSEManagerWrapper">
			<sysproperty key="LISA_HOME" value="C:\lisa 8.4\DevTest" />
			<arg value="remove" />
			<arg value="--registry" />
			<arg value="${lisa.registry}" />
			<arg value="--vse" />
			<arg value="${vse.server}" />
			<arg value="--service-name" />
			<arg value="${vsi}" />
			<!-- credentials -->
			<arg value="${lisa.username}" />
			<arg value="${lisa.password}" />
			<jvmarg value="-Xms256m" />
			<jvmarg value="-Xmx1024m" />
		</java>
	</target>

	<!-- deploy all MAR service to VSE -->
	<target name="deploy-all-mar" depends="set-credentials">
		<echo message="deploying all MAR to ${vse.server} " />
		<java classpathref="project.classpath" fork="true" classname="com.itko.lisa.vse.batch.cmd.mgr.VSEManagerWrapper">
			<sysproperty key="LISA_HOME" value="C:\lisa 8.4\DevTest" />
			<arg value="deploy-all-mar" />
			<arg value="--registry" />
			<arg value="${lisa.registry}" />
			<arg value="--mar-dir" />
			<arg value="${mar.dir}" />
			<arg value="--vse" />
			<arg value="${vse.server}" />
			<!-- optional values -->
			<arg value="--ignore-if-exist" />
			<arg value="false" />
			<!-- credentials -->
			<arg value="${lisa.username}" />
			<arg value="${lisa.password}" />
			<jvmarg value="-Xms256m" />
			<jvmarg value="-Xmx1024m" />
		</java>
	</target>

	<!-- deploy all MARI service to VSE -->
	<target name="deploy-all-mari" depends="set-credentials">
		<echo message="deploying all MARI to ${vse.server} " />
		<java classpathref="project.classpath" fork="true" classname="com.itko.lisa.vse.batch.cmd.mgr.VSEManagerWrapper">
			<sysproperty key="LISA_HOME" value="C:\lisa 8.4\DevTest" />
			<arg value="deploy-all-mari" />
			<arg value="--registry" />
			<arg value="${lisa.registry}" />
			<arg value="--mar-dir" />
			<arg value="${mar.dir}" />
			<arg value="--vse" />
			<arg value="${vse.server}" />
			<!-- optional values -->
			<arg value="--ignore-if-exist" />
			<arg value="false" />
			<!-- credentials -->
			<arg value="${lisa.username}" />
			<arg value="${lisa.password}" />
			<jvmarg value="-Xms256m" />
			<jvmarg value="-Xmx1024m" />
		</java>
	</target>

	<!-- deploy a single service on VSE -->
	<target name="deploy" depends="read-si-name, set-credentials">
		<echo message="deploying ${vsi} to ${vse.server} " />
		<java classpathref="project.classpath" fork="true" classname="com.itko.lisa.vse.batch.cmd.mgr.VSEManagerWrapper">
			<sysproperty key="LISA_HOME" value="C:\lisa 8.4\DevTest" />
			<arg value="deploy" />
			<arg value="--registry" />
			<arg value="${lisa.registry}" />
			
			<arg value="--proj-root-dir" />
			<arg value="${lisa.proj.root}" />
			
			<arg value="--vs-dir" />
			<arg value="${vs.dir}" />
			<arg value="--vse" />
			<arg value="${vse.server}" />
			<arg value="--service-name" />
			<arg value="${vsi}" />
			<arg value="--config" />
			<arg value="${config.file}" />
			<!-- optional values -->
			<arg value="--capacity" />
			<arg value="${vs.capacity}" />
			<arg value="--think-scale" />
			<arg value="${vs.thinkscale}" />
			<arg value="--auto-restart" />
			<arg value="${vs.restart}" />
			<!-- credentials -->
			<arg value="${lisa.username}" />
			<arg value="${lisa.password}" />
			<jvmarg value="-Xms256m" />
			<jvmarg value="-Xmx1024m" />
		</java>
	</target>

	<!-- redeploy a single service on VSE -->
	<target name="redeploy" depends="read-si-name, set-credentials">
		<echo message="redeploying ${vsi} to ${vse.server} " />
		<java classpathref="project.classpath" fork="true" classname="com.itko.lisa.vse.batch.cmd.mgr.VSEManagerWrapper">
			<sysproperty key="LISA_HOME" value="C:\lisa 8.4\DevTest" />
			<arg value="redeploy" />
			<arg value="--registry" />
			<arg value="${lisa.registry}" />
			<arg value="--proj-root-dir" />
			<arg value="${lisa.proj.root}" />
			<arg value="--vs-dir" />
			<arg value="${vs.dir}" />
			<arg value="--vse" />
			<arg value="${vse.server}" />
			<arg value="--service-name" />
			<arg value="${vsi}" />
			<arg value="--config" />
			<arg value="${config.file} "/>
			<!--
			<arg value="-/-config" />
			<arg value="${config.file}" />
-->
			<!-- credentials -->
			<arg value="${lisa.username}" />
			<arg value="${lisa.password}" />
			<jvmarg value="-Xms256m" />
			<jvmarg value="-Xmx1024m" />
		</java>
	</target>

	<!-- update a single service on VSE -->
	<target name="update" depends="read-si-name">
		<echo message="updating ${vsi} on on ${vse.server} " />
		<antcall target="update-vse-manager">
			<param name="cmd.vsemgr" value="update" />
		</antcall>
	</target>


	<!-- status of service on VSE -->
	<target name="status" depends="read-si-name">
		<echo message="status for: ${vsi} on  ${vse.server}" />
		<antcall target="exec-vse-manager">
			<param name="cmd.vsemgr" value="status" />
		</antcall>
	</target>


	<!-- status of all services on VSE -->
	<target name="vse-status-all">
		<echo message="Status of all services on ${vse.server} :  " />
		<antcall target="exec-vse-manager">
			<param name="vsi" value="all" />
			<param name="cmd.vsemgr" value="status" />
		</antcall>
	</target>

	<target name="status-all">
		<antcall target="project-status-all" />
	</target>

	<!-- status of all services on VSE from the given project -->
	<target name="project-status-all" depends="set-credentials">
		<echo message="Status of all project services on ${vse.server} :  " />
		<java classpathref="project.classpath" fork="true" classname="com.itko.lisa.vse.batch.cmd.mgr.VSEManagerWrapper">
			<sysproperty key="LISA_HOME" value="C:\lisa 8.4\DevTest" />
			<arg value="project-status-vse" />
			<arg value="--registry" />
			<arg value="${lisa.registry}" />
			<arg value="--vse" />
			<arg value="${vse.server}" />
			<arg value="--vs-dir" />
			<arg value="${vs.dir}" />
			<arg value="${lisa.username}" />
			<arg value="${lisa.password}" />
			<jvmarg value="-Xms256m" />
			<jvmarg value="-Xmx1024m" />
		</java>
	</target>
	<!--
		Stop all project service images in the VSE
	-->
	<target name="stop-all">
		<antcall target="project-stop-all" />
	</target>
	<target name="project-stop-all" depends="set-credentials">
		<echo message="Stopping all project services on ${vse.server} " />
		<java classpathref="project.classpath" fork="true" classname="com.itko.lisa.vse.batch.cmd.mgr.VSEManagerWrapper">
			<sysproperty key="LISA_HOME" value="C:\lisa 8.4\DevTest" />
			<arg value="project-stop-all" />
			<arg value="--registry" />
			<arg value="${lisa.registry}" />
			<arg value="--vse" />
			<arg value="${vse.server}" />
			<arg value="--vs-dir" />
			<arg value="${vs.dir}" />
			<arg value="${lisa.username}" />
			<arg value="${lisa.password}" />
			<jvmarg value="-Xms256m" />
			<jvmarg value="-Xmx1024m" />
		</java>
	</target>

	<!--
		Stop all service images in the VSE
	-->
	<target name="vse-stop-all" depends="set-credentials">
		<echo message="Stopping all  services on ${vse.server} " />
		<antcall target="exec-vse-manager">
			<param name="vsi" value="all" />
			<param name="cmd.vsemgr" value="stop" />
		</antcall>
	</target>
	
	<!--
		Reset the tx count of all the VSM
	-->
	<target name="reset-all" depends="set-credentials">
		<echo message="Reset transaction count of all services on ${vse.server} " />
		<java classpathref="project.classpath" fork="true" classname="com.itko.lisa.vse.batch.cmd.mgr.VSEManagerWrapper">
			<sysproperty key="LISA_HOME" value="C:\lisa 8.4\DevTest" />
			<arg value="reset-all" />
			<arg value="--registry" />
			<arg value="${lisa.registry}" />
			<arg value="--vse" />
			<arg value="${vse.server}" />
			<arg value="--vs-dir" />
			<arg value="${vs.dir}" />
			<arg value="${lisa.username}" />
			<arg value="${lisa.password}" />
			<jvmarg value="-Xms256m" />
			<jvmarg value="-Xmx1024m" />
		</java>
	</target>
	<!--
		Deploy all virtual service to the VSE.
	-->
	<target name="deploy-all" depends="set-credentials">
		<echo message="Deploying all services to ${vse.server} " />
		<java classpathref="project.classpath" fork="true" classname="com.itko.lisa.vse.batch.cmd.mgr.VSEManagerWrapper">
			<sysproperty key="LISA_HOME" value="C:\lisa 8.4\DevTest" />
			<arg value="deploy-all" />
			<arg value="--registry" />
			<arg value="${lisa.registry}" />
			<arg value="--vs-dir" />
			<arg value="${vs.dir}" />
			<arg value="--proj-root-dir" />
			<arg value="${lisa.proj.root}" />
			<arg value="--vse" />
			<arg value="${vse.server}" />
			<arg value="--config" />
			<arg value="${config.file}" />
			<!-- optional values -->
			<arg value="--ignore-if-exist" />
			<arg value="false" />
			<arg value="--capacity" />
			<arg value="${vs.capacity}" />
			<arg value="--think-scale" />
			<arg value="${vs.thinkscale}" />
			<arg value="--auto-restart" />
			<arg value="${vs.restart}" />
			<!-- credentials -->
			<arg value="${lisa.username}" />
			<arg value="${lisa.password}" />
			<jvmarg value="-Xms256m" />
			<jvmarg value="-Xmx1024m" />
		</java>
	</target>

	<!--
		Deploy all virtual service to the VSE.
	-->
	<target name="smart-deploy-all" depends="set-credentials">
		<echo message="Smart deploying all services to ${vse.server} " />
		<java classpathref="project.classpath" fork="true" classname="com.itko.lisa.vse.batch.cmd.mgr.VSEManagerWrapper">
			<sysproperty key="LISA_HOME" value="C:\lisa 8.4\DevTest" />
			<arg value="deploy-all" />
			<arg value="--registry" />
			<arg value="${lisa.registry}" />
			<arg value="--vs-dir" />
			<arg value="${vs.dir}" />
			<arg value="--proj-root-dir" />
			<arg value="${lisa.proj.root}" />
			<arg value="--vse" />
			<arg value="${vse.server}" />
			<arg value="--config" />
			<arg value="${config.file}" />
			<!-- optional values -->
			<arg value="--ignore-if-exist" />
			<arg value="true" />
			<arg value="--capacity" />
			<arg value="${vs.capacity}" />
			<arg value="--think-scale" />
			<arg value="${vs.thinkscale}" />
			<arg value="--auto-restart" />
			<arg value="${vs.restart}" />
			<!-- credentials -->
			<arg value="${lisa.username}" />
			<arg value="${lisa.password}" />
			<jvmarg value="-Xms256m" />
			<jvmarg value="-Xmx1024m" />
		</java>
	</target>

	<!--
		Remove all service images from the VSE database.
	-->
	<target name="remove-all" depends="set-credentials">
		<echo message="Removing all services from ${vse.server} " />
		<java classpathref="project.classpath" fork="true" classname="com.itko.lisa.vse.batch.cmd.mgr.VSEManagerWrapper">
			<sysproperty key="LISA_HOME" value="C:\lisa 8.4\DevTest" />
			<arg value="remove-all" />
			<arg value="--registry" />
			<arg value="${lisa.registry}" />
			<arg value="--vse" />
			<arg value="${vse.server}" />
			<arg value="--vs-dir" />
			<arg value="${vs.dir}" />
			<arg value="${lisa.username}" />
			<arg value="${lisa.password}" />
			<jvmarg value="-Xms256m" />
			<jvmarg value="-Xmx1024m" />
		</java>
	</target>

	<!--
		Build mari from VSM.
	-->
	<target name="build-mari" depends="set-credentials, read-si-name">
		<property name="name.model" value="${vs.dir}/${vsi}.vsm" />
		<echo message="building MARI for : ${vsi} [${name.model}]" />
		<java classpathref="project.classpath" fork="true" classname="com.itko.lisa.vse.batch.cmd.mgr.VSEManagerWrapper">
			<sysproperty key="LISA_HOME" value="C:\lisa 8.4\DevTest" />
			<arg value="build-mari" />
			<arg value="--registry" />
			<arg value="${lisa.registry}" />
			<arg value="--vs-dir" />
			<arg value="${vs.dir}" />
			<arg value="--proj-root-dir" />
			<arg value="${lisa.proj.root}" />
			<arg value="--mar-dir" />
			<arg value="${mar.dir}" />
			<arg value="--service-name" />
			<arg value="${vsi}" />
			<arg value="--config" />
			<arg value="${config.file}" />

			<!-- optional values -->
			<arg value="--capacity" />
			<arg value="${vs.capacity}" />
			<arg value="--think-scale" />
			<arg value="${vs.thinkscale}" />
			<arg value="--auto-restart" />
			<arg value="${vs.restart}" />

			<!-- credentials -->
			<arg value="${lisa.username}" />
			<arg value="${lisa.password}" />
			<jvmarg value="-Xms256m" />
			<jvmarg value="-Xmx1024m" />
		</java>

	</target>

	<!--
		Build mari from all VSM.
	-->
	<target name="build-all-mari" depends="set-credentials">
		<property name="name.model" value="${vs.dir}/${vsi}.vsm" />
		<echo message="building MARI for all models in ${vs.dir}" />
		<java classpathref="project.classpath" fork="true" classname="com.itko.lisa.vse.batch.cmd.mgr.VSEManagerWrapper">
			<sysproperty key="LISA_HOME" value="C:\lisa 8.4\DevTest" />
			<arg value="build-all-mari" />
			<arg value="--registry" />
			<arg value="${lisa.registry}" />
			<arg value="--vs-dir" />
			<arg value="${vs.dir}" />
			<arg value="--proj-root-dir" />
			<arg value="${lisa.proj.root}" />
			<arg value="--mar-dir" />
			<arg value="${mar.dir}" />
			<arg value="--build-all" />
			<arg value="--config" />
			<arg value="${config.file}" />

			<!-- optional values -->
			<arg value="--capacity" />
			<arg value="${vs.capacity}" />
			<arg value="--think-scale" />
			<arg value="${vs.thinkscale}" />
			<arg value="--auto-restart" />
			<arg value="${vs.restart}" />

			<!-- credentials -->
			<arg value="${lisa.username}" />
			<arg value="${lisa.password}" />
			<jvmarg value="-Xms256m" />
			<jvmarg value="-Xmx1024m" />
		</java>
	</target>

	<!--
		Deploy mari
	-->
	<target name="deploy-mari" depends="set-credentials, read-si-name">
		<echo message="Deploying Virtual Service MARI ${vsi} to ${vse.server}" />
		<java classpathref="project.classpath" fork="true" classname="com.itko.lisa.vse.batch.cmd.mgr.VSEManagerWrapper">
			<sysproperty key="LISA_HOME" value="C:\lisa 8.4\DevTest" />
			<arg value="deploy-mari" />
			<arg value="--registry" />
			<arg value="${lisa.registry}" />
			<arg value="--mar-dir" />
			<arg value="${mar.dir}" />
			<arg value="--proj-root-dir" />
			<arg value="${lisa.proj.root}" />
			<arg value="--vse" />
			<arg value="${vse.server}" />
			<arg value="--service-name" />
			<arg value="${vsi}" />
			<!-- optional values -->
			<arg value="--ignore-if-exist" />
			<arg value="false" />
			<!-- credentials -->
			<arg value="${lisa.username}" />
			<arg value="${lisa.password}" />
			<jvmarg value="-Xms256m" />
			<jvmarg value="-Xmx1024m" />
		</java>
	</target>


</project>
<record name="logfile.txt" action="stop"/>